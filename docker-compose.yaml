version: "3.9"
services:
  go_echo:
    container_name: go_echo
    image: jump_in-go_echo
    build:
      context: ./go_echo
      dockerfile: ./Dockerfile
    ports:
      - "8080:8080"
    environment:
      - HTTP_SCHEME_HOSTNAME_PORT
      - PG_DB_USER
      - PG_DB_PASS
      - PG_INSTANCE_HOST
      - PG_DB_PORT
      - PG_DB_NAME
      - SESSION_STORE_SECURE_KEY
      - SESSION_NAME
      - SESSION_VAR_NAME
      - SMTP_SERVER_NAME
      - SMTP_SERVER_PORT
      - SMTP_SERVER_MAIL_ADDRESS
      - SMTP_SERVER_PASSWORD
      - SMTP_SERVER_MAILER_NAME
    volumes:
      - ./go_echo:/usr/src/app
  go_nginx:
    container_name: go_nginx
    image: jump_in-go_nginx
    build:
      context: ./go_nginx
      dockerfile: ./Dockerfile
    volumes:
      - ./go_nginx/templates:/etc/nginx/templates
      - ./go_nginx/dist:/var/www/
    ports:
      - "80:80"
    environment:
      - API_ORIGIN
    depends_on:
      - go_echo
  db_pg:
    container_name: db_pg
    image: jump_in-db_pg
    build:
      context: ./db_pg
      dockerfile: ./Dockerfile
    ports:
      - "5432:5432"
    environment:
      # 開発用
      - POSTGRES_PASSWORD
      - POSTGRES_USER
      - POSTGRES_DB
    volumes:
      - ./pg:/var/data
      - ./pg/ddl:/docker-entrypoint-initdb.d